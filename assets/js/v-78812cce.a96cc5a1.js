"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[865],{609:(s,l,a)=>{a.r(l),a.d(l,{default:()=>es});var t=a(6252),n=a(287),e=a(3959);const c=(0,t._)("h2",{id:"github-action",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#github-action","aria-hidden":"true"},"#"),(0,t.Uk)(" GitHub action")],-1),o={href:"https://github.com/cocogitto/cocogitto-action",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("cocogitto-action"),i=(0,t.Uk)(" can be used in your GitHub action CI/CD to perform release, check commits against the conventional commits specification and create changelogs."),h=(0,t._)("div",{class:"custom-container warning"},[(0,t._)("p",{class:"custom-container-title"},"WARNING"),(0,t._)("p",null,"The action runs on x86 linux runner only.")],-1),u=(0,t._)("h3",{id:"conventional-commits-check",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#conventional-commits-check","aria-hidden":"true"},"#"),(0,t.Uk)(" Conventional commits check")],-1),_=(0,t._)("p",null,"By default, if no additional argument is provided cocogitto-action will just check that all your commits are conventional commits compliant :",-1),p=(0,t._)("div",{class:"language-yaml ext-yml"},[(0,t._)("pre",{class:"language-yaml"},[(0,t._)("code",null,[(0,t._)("span",{class:"hljs-attr"},"on:"),(0,t.Uk)(" ["),(0,t._)("span",{class:"hljs-string"},"push"),(0,t.Uk)("]\n\n"),(0,t._)("span",{class:"hljs-attr"},"jobs:"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"hljs-attr"},"cog_check_job:"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"runs-on:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"ubuntu-latest"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"check"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"conventional"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"commit"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"compliance"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"steps:"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"uses:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"actions/checkout@main"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"with:"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"hljs-attr"},"fetch-depth:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-number"},"0"),(0,t.Uk)("\n\n      "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Conventional"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"commits"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"check"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"uses:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"oknozor/cocogitto-action@v1"),(0,t.Uk)("\n")])])],-1),g={class:"custom-container warning"},k=(0,t._)("p",{class:"custom-container-title"},"WARNING",-1),d=(0,t.Uk)("You need to use the checkout action with "),m={href:"https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches",target:"_blank",rel:"noopener noreferrer"},U=(0,t._)("code",null,"fetch-depth: 0",-1),j=(0,t.Uk)(" option to get the full git history before running cocogitto-action."),b=(0,t._)("p",null,"If you want the action to check only commits since the latest SemVer tag you can do the following:",-1),f=(0,t._)("div",{class:"language-yaml ext-yml"},[(0,t._)("pre",{class:"language-yaml"},[(0,t._)("code",null,[(0,t.Uk)("  "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Conventional"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"commits"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"check"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"uses:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"oknozor/cocogitto-action@main"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"with:"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"hljs-attr"},"check-latest-tag-only:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-literal"},"true"),(0,t.Uk)("\n")])])],-1),v=(0,t._)("h3",{id:"conventional-commits-release",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#conventional-commits-release","aria-hidden":"true"},"#"),(0,t.Uk)(" Conventional commits release")],-1),y=(0,t._)("p",null,[(0,t.Uk)("To create a release with cocogitto-action simply add the "),(0,t._)("code",null,"release"),(0,t.Uk)(" option :")],-1),w=(0,t._)("div",{class:"language-yaml ext-yml"},[(0,t._)("pre",{class:"language-yaml"},[(0,t._)("code",null,[(0,t.Uk)("  "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Semver"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"release"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"uses:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"oknozor/cocogitto-action@main"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"with:"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"hljs-attr"},"release:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-literal"},"true"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"hljs-attr"},"git-user:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"'Cog Bot'"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"hljs-attr"},"git-user-email:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"'mycoolproject@org.org'"),(0,t.Uk)("\n")])])],-1),C=(0,t._)("p",null,[(0,t.Uk)("This will run "),(0,t._)("code",null,"cog bump --auto"),(0,t.Uk)(" during the step execution.")],-1),x=(0,t._)("p",null,"If you need to use the created version number later in your job you can access it like so :",-1),G=(0,t._)("div",{class:"language-yaml ext-yml"},[(0,t._)("pre",{class:"language-yaml"},[(0,t._)("code",null,[(0,t.Uk)("  "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Print"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"version"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"run:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},[(0,t.Uk)("\"echo '$"),(0,t._)("span",{class:"hljs-template-variable"},"{{ steps.release.outputs.version }}"),(0,t.Uk)("'\"")]),(0,t.Uk)("\n")])])],-1),H=(0,t._)("div",{class:"custom-container tip"},[(0,t._)("p",{class:"custom-container-title"},"TIP"),(0,t._)("p",null,[(0,t.Uk)("You can set the "),(0,t._)("code",null,"git-user"),(0,t.Uk)(" and "),(0,t._)("code",null,"git-user-email"),(0,t.Uk)(" options to override the default git signature for the release commit.")]),(0,t._)("p",null,"You might also want to use a dedicated GitHub account to perform the release, this can be done using the checkout action:"),(0,t._)("div",{class:"language-yaml ext-yml"},[(0,t._)("pre",{class:"language-yaml"},[(0,t._)("code",null,[(0,t.Uk)("      "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"uses:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"actions/checkout@v2"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"with:"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"hljs-attr"},"fetch-depth:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-number"},"0"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"hljs-attr"},"ssh-key:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"${{"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"secrets.SERVICE_ACCOUNT_SSH_KEY"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"}}"),(0,t.Uk)("\n          \n      "),(0,t._)("span",{class:"hljs-comment"},"# Perform release ... "),(0,t.Uk)("\n")])])])],-1),A=(0,t._)("p",null,"Also see:",-1),I=(0,t.Uk)("Cog guide -> Cog check"),S=(0,t._)("h3",{id:"github-release-changelog",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#github-release-changelog","aria-hidden":"true"},"#"),(0,t.Uk)(" GitHub release changelog")],-1),T=(0,t._)("p",null,[(0,t.Uk)("Depending on the options provided the action will run check and/or create a release but if you need to perform some custom steps you can directly use "),(0,t._)("code",null,"coco"),(0,t.Uk)(" and "),(0,t._)("code",null,"cog"),(0,t.Uk)(".")],-1),E=(0,t._)("div",{class:"language-yaml ext-yml"},[(0,t._)("pre",{class:"language-yaml"},[(0,t._)("code",null,[(0,t._)("span",{class:"hljs-attr"},"on:"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"hljs-attr"},"workflow_dispatch:"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"branches:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"main"),(0,t.Uk)("\n    \n"),(0,t._)("span",{class:"hljs-attr"},"jobs:"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"hljs-attr"},"release:"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Perform"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"release"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Semver"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"release"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"uses:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"oknozor/cocogitto-action@main"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"id:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"release"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"with:"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"hljs-attr"},"release:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-literal"},"true"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"hljs-attr"},"git-user:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"'Cog Bot'"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"hljs-attr"},"git-user-email:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"'mycoolproject@org.org'"),(0,t.Uk)("\n\n      "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Generate"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Changelog"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"run:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"cog"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"changelog"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"--at"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"${{"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"steps.release.outputs.version"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"}}"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"-t"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"full_hash"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},">"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"GITHUB_CHANGELOG.md"),(0,t.Uk)("\n\n      "),(0,t._)("span",{class:"hljs-bullet"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"name:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"Upload"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"github"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"release"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"uses:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"softprops/action-gh-release@v1"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"hljs-attr"},"with:"),(0,t.Uk)("\n          "),(0,t._)("span",{class:"hljs-attr"},"body_path:"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-string"},"GITHUB_CHANGELOG.md"),(0,t.Uk)("\n")])])],-1),N=(0,t._)("p",null,"Also see:",-1),P=(0,t.Uk)("Cog guide -> Automatic Versioning"),W=(0,t._)("p",null,[(0,t.Uk)("Note that you can disable the "),(0,t._)("code",null,"check"),(0,t.Uk)(" option if needed.")],-1),B=(0,t._)("h3",{id:"action-reference",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#action-reference","aria-hidden":"true"},"#"),(0,t.Uk)(" Action reference")],-1),D=(0,t._)("p",null,[(0,t.Uk)("Here are all the inputs available through "),(0,t._)("code",null,"with"),(0,t.Uk)(":")],-1),O=(0,t._)("table",null,[(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",null,"Option"),(0,t._)("th",null,"Description"),(0,t._)("th",null,"Default")])]),(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",null,"check")]),(0,t._)("td",null,[(0,t.Uk)("Check conventional commit compliance with "),(0,t._)("code",null,"cog check")]),(0,t._)("td",null,[(0,t._)("code",null,"true")])]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",null,"check-latest-tag-only")]),(0,t._)("td",null,[(0,t.Uk)("Check conventional commit compliance with "),(0,t._)("code",null,"cog check --from-latest-tag")]),(0,t._)("td",null,[(0,t._)("code",null,"false")])]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",null,"release")]),(0,t._)("td",null,[(0,t.Uk)("Perform a release using "),(0,t._)("code",null,"cog bump --auto")]),(0,t._)("td",null,[(0,t._)("code",null,"false")])]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",null,"git-user")]),(0,t._)("td",null,[(0,t.Uk)("Set the git "),(0,t._)("code",null,"user.name"),(0,t.Uk)(" to use for the release commit")]),(0,t._)("td",null,[(0,t._)("code",null,"cog-bot")])]),(0,t._)("tr",null,[(0,t._)("td",null,[(0,t._)("code",null,"git-user-email")]),(0,t._)("td",null,[(0,t.Uk)("Set the git "),(0,t._)("code",null,"user.email"),(0,t.Uk)(" to use for the release commit")]),(0,t._)("td",null,[(0,t._)("code",null,"cog@demo.org")])])])],-1),q=(0,t._)("h2",{id:"github-bot",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#github-bot","aria-hidden":"true"},"#"),(0,t.Uk)(" GitHub Bot")],-1),R=(0,t._)("p",null,"Cocogitto also has a GitHub bot that decorate pull request with status check.",-1),Y=(0,t.Uk)("To install it just go to "),z={href:"https://github.com/apps/cocogitto-bot",target:"_blank",rel:"noopener noreferrer"},L=(0,t.Uk)("github.com/apps/cocogitto-bot"),V=(0,t.Uk)(' and click "Configure". Add the desired repository and grant the required permission.'),$=(0,t._)("p",null,"Once it is done cocogitto-bot will comment on every pull-request events :",-1),Z=(0,t._)("p",null,[(0,t._)("strong",null,"Example:")],-1),F=(0,t._)("p",null,"Success:",-1),K=(0,t._)("p",null,[(0,t._)("img",{src:n,alt:"cocogitto bot success example"})],-1),M=(0,t._)("p",null,"Failure:",-1),J=(0,t._)("p",null,[(0,t._)("img",{src:e,alt:"cocogitto bot failure example"})],-1),Q={class:"custom-container tip"},X=(0,t._)("p",{class:"custom-container-title"},"TIP",-1),ss=(0,t.Uk)("You can "),ls={href:"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks",target:"_blank",rel:"noopener noreferrer"},as=(0,t.Uk)("make status check mandatory"),ts=(0,t.Uk)(" to enforce conventional commits in your pull-requests."),ns={},es=(0,a(3744).Z)(ns,[["render",function(s,l){const a=(0,t.up)("OutboundLink"),n=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[c,(0,t._)("p",null,[(0,t._)("a",o,[r,(0,t.Wm)(a)]),i]),h,u,_,p,(0,t._)("div",g,[k,(0,t._)("p",null,[d,(0,t._)("a",m,[U,(0,t.Wm)(a)]),j])]),b,f,v,y,w,C,x,G,H,A,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(n,{to:"/cog_guide/#check-commit-history"},{default:(0,t.w5)((()=>[I])),_:1})])]),S,T,E,N,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(n,{to:"/cog_guide/#auto-bump"},{default:(0,t.w5)((()=>[P])),_:1})])]),W,B,D,O,q,R,(0,t._)("p",null,[Y,(0,t._)("a",z,[L,(0,t.Wm)(a)]),V]),$,Z,F,K,M,J,(0,t._)("div",Q,[X,(0,t._)("p",null,[ss,(0,t._)("a",ls,[as,(0,t.Wm)(a)]),ts])])],64)}]])},3744:(s,l)=>{l.Z=(s,l)=>{const a=s.__vccOpts||s;for(const[s,t]of l)a[s]=t;return a}},1114:(s,l,a)=>{a.r(l),a.d(l,{data:()=>t});const t={key:"v-78812cce",path:"/ci_cd/",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"GitHub action",slug:"github-action",children:[{level:3,title:"Conventional commits check",slug:"conventional-commits-check",children:[]},{level:3,title:"Conventional commits release",slug:"conventional-commits-release",children:[]},{level:3,title:"GitHub release changelog",slug:"github-release-changelog",children:[]},{level:3,title:"Action reference",slug:"action-reference",children:[]}]},{level:2,title:"GitHub Bot",slug:"github-bot",children:[]}],filePathRelative:"ci_cd/README.md",git:{updatedTime:1637750134e3,contributors:[{name:"Paul Delafosse",email:"paul.delafosse@protonmail.com",commits:1}]}}},3959:(s,l,a)=>{s.exports=a.p+"assets/img/cog-bot-ko.2d58799a.png"},287:(s,l,a)=>{s.exports=a.p+"assets/img/cog-bot-ok.6c0fcbae.png"}}]);