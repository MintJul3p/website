"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[605],{9699:(e,l,s)=>{s.r(l),s.d(l,{default:()=>xe});var o=s(6252);const t=(0,o.uE)('<h1 id="configuration-reference" tabindex="-1"><a class="header-anchor" href="#configuration-reference" aria-hidden="true">#</a> Configuration reference</h1><p>The config reference list all value that can be set in the <code>cog.toml</code> file at the root of a repository.</p><h2 id="general" tabindex="-1"><a class="header-anchor" href="#general" aria-hidden="true">#</a> General</h2><h3 id="tag-prefix" tabindex="-1"><a class="header-anchor" href="#tag-prefix" aria-hidden="true">#</a> <code>tag_prefix</code></h3>',4),a=(0,o.uE)('<li><p>Type: <code>String</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Description: set a tag prefix value for cocogitto. For instance if you have a <code>v</code> as a tag prefix, cocogitto will generate version starting with <code>v</code> and commands like <code>cog changelog</code> will pick only those versions.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-attr">tag_prefix</span> = <span class="hljs-string">&quot;v&quot;</span>\n</code></pre></div></li>',4),n=(0,o._)("p",null,"Also see:",-1),i=(0,o.Uk)("Cog guide -> Tag prefix"),u=(0,o._)("h3",{id:"commit-types",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#commit-types","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"commit_types")],-1),p=(0,o.uE)('<li><p>Type: <code>Hashmap&lt;String, ChangelogTitle&gt;</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Description: extend the allowed commit types, creating a new <code>coco</code> command and allowing to generate changelog entries for the given type.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-section">[commit_types]</span>\n<span class="hljs-attr">hotfix</span> = { changelog_title = <span class="hljs-string">&quot;Hotfixes&quot;</span> }\n<span class="hljs-attr">release</span> = { changelog_title = <span class="hljs-string">&quot;Releases&quot;</span> }\n</code></pre></div></li>',4),r=(0,o._)("p",null,"Also see:",-1),c=(0,o.Uk)("Coco guide -> Custom commit types"),g=(0,o._)("h2",{id:"bump-config",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#bump-config","aria-hidden":"true"},"#"),(0,o.Uk)(" Bump config")],-1),d=(0,o._)("h3",{id:"pre-bump-hooks",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#pre-bump-hooks","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"pre_bump_hooks")],-1),h=(0,o.uE)('<li><p>Type: <code>Array&lt;String&gt;</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Description: an array of command to execute before a version bump.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-attr">pre_bump_hooks</span> = [\n    <span class="hljs-string">&quot;sh -c \\&quot;./ci/check_branch.sh\\&quot;&quot;</span>,\n    <span class="hljs-string">&quot;cargo test -- --test-threads 1&quot;</span>,\n    <span class="hljs-string">&quot;cargo clippy&quot;</span>,\n    <span class="hljs-string">&quot;cargo build --release&quot;</span>,\n    <span class="hljs-string">&quot;cargo fmt --all&quot;</span>,\n    <span class="hljs-string">&quot;cargo bump {{version}}&quot;</span>,\n]\n</code></pre></div></li>',4),m=(0,o._)("p",null,"Also see:",-1),_=(0,o.Uk)("Cog guide -> Automatic Versioning"),f=(0,o.Uk)("Cog guide -> Pre-bump hooks"),q=(0,o.Uk)("Cog guide -> Version DSL"),k=(0,o._)("h3",{id:"post-bump-hooks",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#post-bump-hooks","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"post_bump_hooks")],-1),b=(0,o.uE)('<li><p>Type: <code>Array&lt;String&gt;</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Description: an array of command to execute after a version bump.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-attr">post_bump_hooks</span> = [\n    <span class="hljs-string">&quot;git push&quot;</span>,\n    <span class="hljs-string">&quot;git push origin {{version}}&quot;</span>,\n    <span class="hljs-string">&quot;cargo package&quot;</span>,\n    <span class="hljs-string">&quot;cargo publish&quot;</span>\n]\n</code></pre></div></li>',4),j=(0,o._)("p",null,"Also see:",-1),v=(0,o.Uk)("Cog guide -> Automatic Versioning"),w=(0,o.Uk)("Cog guide -> Post-bump hooks"),x=(0,o.Uk)("Cog guide -> Version DSL"),y=(0,o._)("h3",{id:"bump-profiles",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#bump-profiles","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"bump_profiles")],-1),U=(0,o._)("li",null,[(0,o._)("p",null,[(0,o.Uk)("Type: "),(0,o._)("code",null,"Hashmap<String, BumpProfile>")])],-1),C=(0,o._)("li",null,[(0,o._)("p",null,[(0,o.Uk)("Optional: "),(0,o._)("code",null,"true")])],-1),W=(0,o.Uk)("Description: add additional "),E=(0,o.Uk)("pre-bump"),A=(0,o.Uk)(" and "),D=(0,o.Uk)("post-bump"),T=(0,o.Uk)(" hooks profile. a profile can be used with the "),S=(0,o._)("code",null,"cog bump --hook-profile <profile_name>",-1),O=(0,o.Uk)(" flag."),L=(0,o.uE)('<li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-section">[bump_profoiles.hotfix]</span>\n<span class="hljs-attr">pre_bump_hooks</span> = [\n    <span class="hljs-string">&quot;cargo build --release&quot;</span>,\n    <span class="hljs-string">&quot;cargo fmt --all&quot;</span>,\n    <span class="hljs-string">&quot;cargo bump {{version}}&quot;</span>,\n]\n\n<span class="hljs-attr">post_bump_hooks</span> = [\n    <span class="hljs-string">&quot;cargo package&quot;</span>,\n    <span class="hljs-string">&quot;cargo publish&quot;</span>\n]\n</code></pre></div></li>',1),B=(0,o._)("p",null,"Also see:",-1),P=(0,o.Uk)("Cog guide -> Automatic Versioning"),V=(0,o.Uk)("Cog guide -> Post-bump hooks"),H=(0,o.Uk)("Cog guide -> Pre-bump hooks"),M=(0,o.Uk)("Cog guide -> Version DSL"),R=(0,o.Uk)("Cog guide -> Bump profiles"),G=(0,o._)("h2",{id:"changelog",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#changelog","aria-hidden":"true"},"#"),(0,o.Uk)(" Changelog")],-1),z=(0,o._)("h3",{id:"path",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#path","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"path")],-1),F=(0,o.uE)('<li><p>Type: <code>String</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Default value: <code>&quot;CHANGELOG.md&quot;</code></p></li><li><p>Description: path the repository markdown changelog.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-section">[changelog]</span>\n<span class="hljs-attr">path</span> = <span class="hljs-string">&quot;my_changelog.md&quot;</span>\n</code></pre></div></li>',5),J=(0,o._)("p",null,"Also see:",-1),N=(0,o.Uk)("Cog guide -> Automatic Versioning"),Z=(0,o.Uk)("Cog guide -> Changelog"),Y=(0,o._)("h3",{id:"template",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#template","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"template")],-1),I=(0,o.uE)('<li><p>Type: <code>String</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Default value: <code>&quot;default&quot;</code></p></li><li><p>Description: name of the builtin template to use for changelog generation or path to a custom template. Note that <code>remote</code>, <code>repository</code> and <code>owner</code> are mandatory if the &quot;remote&quot; built-in template us used or if your custom template make use of those variables.</p></li><li><p>Built-in templates : <code>default</code>, <code>remote</code>, <code>full_hash</code></p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-section">[changelog]</span>\n<span class="hljs-attr">template</span> = <span class="hljs-string">&quot;full_hash&quot;</span>\n</code></pre></div></li>',6),K=(0,o._)("p",null,"Also see:",-1),Q=(0,o.Uk)("Cog guide -> Changelog"),X=(0,o.Uk)("Cog guide -> Built-in templates"),$=(0,o.Uk)("Cog guide -> Custom templates"),ee=(0,o._)("h3",{id:"remote",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#remote","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"remote")],-1),le=(0,o.uE)('<li><p>Type: <code>String</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Description: domain name of the git platform hosting the repository, used for Markdown link generation in changelogs. when provided <code>repository</code> and <code>owner</code> are also required.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-section">[changelog]</span>\n<span class="hljs-attr">template</span> = <span class="hljs-string">&quot;remote&quot;</span>\n<span class="hljs-attr">remote</span> = <span class="hljs-string">&quot;github.com&quot;</span>\n<span class="hljs-attr">repository</span> = <span class="hljs-string">&quot;cocogitto&quot;</span>\n<span class="hljs-attr">owner</span> = <span class="hljs-string">&quot;cocogitto&quot;</span>\n</code></pre></div></li>',4),se=(0,o._)("p",null,"Also see:",-1),oe=(0,o.Uk)("Cog guide -> Changelog"),te=(0,o.Uk)("Cog guide -> Built-in templates"),ae=(0,o.Uk)("Cog guide -> Custom templates"),ne=(0,o._)("h3",{id:"repository",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#repository","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"repository")],-1),ie=(0,o.uE)('<li><p>Type: <code>String</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Description: name of the repository on the remote git platform.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-section">[changelog]</span>\n<span class="hljs-attr">template</span> = <span class="hljs-string">&quot;remote&quot;</span>\n<span class="hljs-attr">remote</span> = <span class="hljs-string">&quot;github.com&quot;</span>\n<span class="hljs-attr">repository</span> = <span class="hljs-string">&quot;cocogitto&quot;</span>\n<span class="hljs-attr">owner</span> = <span class="hljs-string">&quot;cocogitto&quot;</span>\n</code></pre></div></li>',4),ue=(0,o._)("p",null,"Also see:",-1),pe=(0,o.Uk)("Cog guide -> Changelog"),re=(0,o.Uk)("Cog guide -> Built-in templates"),ce=(0,o.Uk)("Cog guide -> Custom templates"),ge=(0,o._)("h3",{id:"owner",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#owner","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"owner")],-1),de=(0,o.uE)('<li><p>Type: <code>String</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Description: owner of the repository on the remote git platform.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code><span class="hljs-section">[changelog]</span>\n<span class="hljs-attr">template</span> = <span class="hljs-string">&quot;remote&quot;</span>\n<span class="hljs-attr">remote</span> = <span class="hljs-string">&quot;github.com&quot;</span>\n<span class="hljs-attr">repository</span> = <span class="hljs-string">&quot;cocogitto&quot;</span>\n<span class="hljs-attr">owner</span> = <span class="hljs-string">&quot;cocogitto&quot;</span>\n</code></pre></div></li>',4),he=(0,o._)("p",null,"Also see:",-1),me=(0,o.Uk)("Cog guide -> Changelog"),_e=(0,o.Uk)("Cog guide -> Built-in templates"),fe=(0,o.Uk)("Cog guide -> Custom templates"),qe=(0,o._)("h3",{id:"authors",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#authors","aria-hidden":"true"},"#"),(0,o.Uk)(),(0,o._)("code",null,"authors")],-1),ke=(0,o.uE)('<li><p>Type: <code>Array&lt;Author&gt;</code></p></li><li><p>Optional: <code>true</code></p></li><li><p>Description: A list of commit authors with their git signature and git platform username to generate Markdown links in changelogs.</p></li><li><p>Example:</p><div class="language-toml ext-toml"><pre class="language-toml"><code>  <span class="hljs-section">[changelog]</span>\n  <span class="hljs-attr">authors</span> = [\n    { signature = <span class="hljs-string">&quot;Paul Delafosse&quot;</span>, username = <span class="hljs-string">&quot;oknozor&quot;</span> },\n    { signature = <span class="hljs-string">&quot;Jack Dorland&quot;</span>, username = <span class="hljs-string">&quot;jackdorland&quot;</span> },\n    { signature = <span class="hljs-string">&quot;Mike Lubinets&quot;</span>, username = <span class="hljs-string">&quot;mersinvald&quot;</span> },\n    { signature = <span class="hljs-string">&quot;Marcin Puc&quot;</span>, username = <span class="hljs-string">&quot;tranzystorek-io&quot;</span> },\n    { signature = <span class="hljs-string">&quot;Renault Fernandes&quot;</span>, username = <span class="hljs-string">&quot;renaultfernandes&quot;</span> },\n    { signature = <span class="hljs-string">&quot;Pieter Joost van de Sande&quot;</span>, username = <span class="hljs-string">&quot;pjvds&quot;</span> },\n    { signature = <span class="hljs-string">&quot;orhun&quot;</span>, username = <span class="hljs-string">&quot;orhun&quot;</span> },\n    { signature = <span class="hljs-string">&quot;Danny Tatom&quot;</span>, username = <span class="hljs-string">&quot;its-danny&quot;</span> },\n]\n</code></pre></div></li>',4),be=(0,o._)("p",null,"Also see:",-1),je=(0,o.Uk)("Cog guide -> Changelog"),ve=(0,o.Uk)("Cog guide -> Built-in templates"),we={},xe=(0,s(3744).Z)(we,[["render",function(e,l){const s=(0,o.up)("RouterLink");return(0,o.wg)(),(0,o.iD)(o.HY,null,[t,(0,o._)("ul",null,[a,(0,o._)("li",null,[n,(0,o._)("p",null,[(0,o.Wm)(s,{to:"/cog_guide/#tag-prefix"},{default:(0,o.w5)((()=>[i])),_:1})])])]),u,(0,o._)("ul",null,[p,(0,o._)("li",null,[r,(0,o._)("p",null,[(0,o.Wm)(s,{to:"/coco_guide/#custom-commit-types"},{default:(0,o.w5)((()=>[c])),_:1})])])]),g,d,(0,o._)("ul",null,[h,(0,o._)("li",null,[m,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#auto-bump"},{default:(0,o.w5)((()=>[_])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#pre-bump-hooks"},{default:(0,o.w5)((()=>[f])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#version-dsl"},{default:(0,o.w5)((()=>[q])),_:1})])])])]),k,(0,o._)("ul",null,[b,(0,o._)("li",null,[j,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#auto-bump"},{default:(0,o.w5)((()=>[v])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#post-bump-hooks"},{default:(0,o.w5)((()=>[w])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#version-dsl"},{default:(0,o.w5)((()=>[x])),_:1})])])])]),y,(0,o._)("ul",null,[U,C,(0,o._)("li",null,[(0,o._)("p",null,[W,(0,o.Wm)(s,{to:"/config/#pre_bump_hooks"},{default:(0,o.w5)((()=>[E])),_:1}),A,(0,o.Wm)(s,{to:"/config/#post_bump_hooks"},{default:(0,o.w5)((()=>[D])),_:1}),T,S,O])]),L,(0,o._)("li",null,[B,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#auto-bump"},{default:(0,o.w5)((()=>[P])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#post-bump-hooks"},{default:(0,o.w5)((()=>[V])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#pre-bump-hooks"},{default:(0,o.w5)((()=>[H])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#version-dsl"},{default:(0,o.w5)((()=>[M])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/cog_guide/#bump-profiles"},{default:(0,o.w5)((()=>[R])),_:1})])])])]),G,z,(0,o._)("ul",null,[F,(0,o._)("li",null,[J,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#auto-bump"},{default:(0,o.w5)((()=>[N])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#changelogs"},{default:(0,o.w5)((()=>[Z])),_:1})])])])]),Y,(0,o._)("ul",null,[I,(0,o._)("li",null,[K,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#changelogs"},{default:(0,o.w5)((()=>[Q])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#buiLt-in-templates"},{default:(0,o.w5)((()=>[X])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#custom-templates"},{default:(0,o.w5)((()=>[$])),_:1})])])])]),ee,(0,o._)("ul",null,[le,(0,o._)("li",null,[se,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#changelogs"},{default:(0,o.w5)((()=>[oe])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#buiLt-in-templates"},{default:(0,o.w5)((()=>[te])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#custom-templates"},{default:(0,o.w5)((()=>[ae])),_:1})])])])]),ne,(0,o._)("ul",null,[ie,(0,o._)("li",null,[ue,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#changelogs"},{default:(0,o.w5)((()=>[pe])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#buiLt-in-templates"},{default:(0,o.w5)((()=>[re])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#custom-templates"},{default:(0,o.w5)((()=>[ce])),_:1})])])])]),ge,(0,o._)("ul",null,[de,(0,o._)("li",null,[he,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#changelogs"},{default:(0,o.w5)((()=>[me])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#buiLt-in-templates"},{default:(0,o.w5)((()=>[_e])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#custom-templates"},{default:(0,o.w5)((()=>[fe])),_:1})])])])]),qe,(0,o._)("ul",null,[ke,(0,o._)("li",null,[be,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#changelogs"},{default:(0,o.w5)((()=>[je])),_:1})]),(0,o._)("li",null,[(0,o.Wm)(s,{to:"/cog_guide/#buiLt-in-templates"},{default:(0,o.w5)((()=>[ve])),_:1})])])])])],64)}]])},3744:(e,l)=>{l.Z=(e,l)=>{const s=e.__vccOpts||e;for(const[e,o]of l)s[e]=o;return s}},8757:(e,l,s)=>{s.r(l),s.d(l,{data:()=>o});const o={key:"v-ba934fd8",path:"/config/",title:"Configuration reference",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"General",slug:"general",children:[{level:3,title:"tag_prefix",slug:"tag-prefix",children:[]},{level:3,title:"commit_types",slug:"commit-types",children:[]}]},{level:2,title:"Bump config",slug:"bump-config",children:[{level:3,title:"pre_bump_hooks",slug:"pre-bump-hooks",children:[]},{level:3,title:"post_bump_hooks",slug:"post-bump-hooks",children:[]},{level:3,title:"bump_profiles",slug:"bump-profiles",children:[]}]},{level:2,title:"Changelog",slug:"changelog",children:[{level:3,title:"path",slug:"path",children:[]},{level:3,title:"template",slug:"template",children:[]},{level:3,title:"remote",slug:"remote",children:[]},{level:3,title:"repository",slug:"repository",children:[]},{level:3,title:"owner",slug:"owner",children:[]},{level:3,title:"authors",slug:"authors",children:[]}]}],filePathRelative:"config/README.md",git:{updatedTime:1636895895e3,contributors:[{name:"Paul Delafosse",email:"paul.delafosse@protonmail.com",commits:4}]}}}}]);